<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.jangaroo</groupId>
  <artifactId>jangaroo-compiler</artifactId>
  <packaging>jar</packaging>
  <version>0.1.1</version>
  <name>Jangaroo compiler</name>

  <parent>
    <groupId>net.jangaroo</groupId>
    <artifactId>jangaroo-tools</artifactId>
    <relativePath>../pom.xml</relativePath>
    <version>0.1.1</version>
  </parent>
    
  <build>
    <testResources>
      <testResource>
        <directory>src/test/js2</directory>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>de.jflex.maven.plugin</groupId>
        <artifactId>maven-jflex-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-parser</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks>

                <property name="cup.input.filename" value="joo.cup" />
                <property name="cup.files.reldir" value="net/jangaroo/jooc" />
                <property name="cup.output.dir" value="${generated.cup.sources.dir}/${cup.files.reldir}" />
                <property name="cup.parser.classname" value="parser" />
                <property name="cup.output.filename" value="${cup.output.dir}/${cup.parser.classname}.java" />

                <mkdir dir="${cup.output.dir}" />

                <!-- forked java process may hang otherwise?! -->
                <delete file="${cup.output.filename}" />

                <java classname="java_cup.Main" fork="true" dir="${cup.output.dir}" failonerror="true">
                  <!-- arg value="-dump_states" /> -->
                  <arg value="-interface" />
                  <arg value="-expect" />
                  <arg value="1" />
                  <!--arg value="-dump"/-->
                  <arg value="${cup.sources.dir}/${cup.files.reldir}/${cup.input.filename}" />
                  <classpath>
                    <path refid="maven.plugin.classpath" />
                  </classpath>
                </java>

              </tasks>
              <sourceRoot>
                ${generated.cup.sources.dir}
              </sourceRoot>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>create-temp-js</id>
            <phase>generate-test-resources</phase>
            <configuration>
              <tasks>
                <mkdir dir="${basedir}/target/temp/js" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          
        </executions>
        <dependencies>
          <dependency>
            <groupId>edu.princeton.cup</groupId>
            <artifactId>java-cup</artifactId>
            <version>10k</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>net/jangaroo/test/integration/**/*</exclude>
          </excludes>
          <systemProperties>
            <property>
              <name>net.jangaroo.jooc.test.source</name>
              <value>${basedir}/target/test-classes</value>
            </property>
            <property>
              <name>net.jangaroo.jooc.test.destination</name>
              <value>${basedir}/target/temp/js</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
            <manifest>
              <addClasspath>true</addClasspath>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>create-archives</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>true</appendAssemblyId>
              <attach>true</attach>
              <descriptors>
                <descriptor>src/main/assembly/runtime.xml</descriptor>
                <descriptor>src/main/assembly/examples.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <properties>
    <generated.cup.sources.dir>${project.build.directory}/generated-sources/cup</generated.cup.sources.dir>
    <cup.sources.dir>${basedir}/src/main/cup</cup.sources.dir>
  </properties>

  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>edu.princeton.cup</groupId>
      <artifactId>java-cup-runtime</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
    </dependency>

    <dependency>
      <groupId>ant</groupId>
      <artifactId>ant</artifactId>
    </dependency>

    <dependency>
      <groupId>rhino</groupId>
      <artifactId>js</artifactId>
    </dependency>

  </dependencies>

</project>